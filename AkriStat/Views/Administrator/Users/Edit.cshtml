@model AkriStat.ViewModels.Administrator.UserEditVM

@using (Html.BeginForm("EditUser", "Administrator", FormMethod.Post, new { @class = "form-center" }))
{
    <div class="row">
        <div class="col-12">
            <h1 style="text-align:center"><b>Edit User</b></h1>
        </div>
        <input type="hidden" asp-for="Id" />
        <div class="col-12">
            <div class="form-group">
                @Html.LabelFor(x => x.FirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-12">
            <div class="form-group">
                @Html.LabelFor(x => x.Surname, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(x => x.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-12">
            <div class="form-group">
                @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-12">
            <div class="form-group">
                @Html.LabelFor(x => x.RoleId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(x => x.RoleId, Model.RoleSelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-12">
            <div class="form-group" id="teamInputs">
                @Html.LabelFor(x => x.TeamId, htmlAttributes: new { @class = "control-label" })
                <select asp-for="TeamId" asp-items="Model.TeamsSelectList" class="selectpicker form-control" data-live-search="true" data-live-search-normalize="true">
                    <option value="">-</option>
                </select>
                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <button type="submit" class="btn btn-primary float-right">Save</button>
        </div>
    </div>
}

<script>
    setBackButton('All Users', '/Admin/Users');

    $('.selectpicker').selectpicker(defaultSelectSettings);
</script>

@if (ViewBag.ChangesSaved != null && ViewBag.ChangesSaved == true)
{
    <script>
        toastr.success('Changes Saved');
        @*@{ ViewBag.ChangesSaved = null; }*@
    </script>
}

<script>
    let acceptedRoles =
        [
            "65E60CAA-834F-4470-BC3D-11F8CAACAD73", // Chief Scout
            "B9D0EA79-74E3-4943-A342-494C61F9945C", // Analyst
            "D4F6C614-10F3-4A79-924B-0427F0FE46DD" // Scout
        ];

    checkRole();

    function checkRole() {
        if (!acceptedRoles.includes($('#RoleId').val())) {
            $('#teamInputs').css('display', 'none');
            $('#TeamId').attr('disabled', true);
        }
        else {
            $('#teamInputs').css('display', 'block');
            $('#TeamId').removeAttr('disabled');
        }
    }

    $('#RoleId').change(function () {
        checkRole();
    });
</script>